{"version":3,"sources":["ui-core/dux/address.js","ui-core/dux/layer.js","server-core/constants/urls.js","server-core/location-service.js","server-core/border-data-api.js","server-core/models/data.js","server-core/models/point.js","server-core/api-client.js","ui-core/dux/data-points.js","ui-core/dux/huc.js","ui-core/dux/index.js","ui-core/dux/store.js","ui-core/components/header.js","ui-core/components/map.js","ui-core/components/legend/legend-row.js","constants_shared/layers.js","ui-core/components/legend/score-legend.js","ui-core/constants/legend.js","ui-core/constants/sidebar-right.js","ui-core/components/sidebar-right/sidebar-right-description.js","ui-core/components/sidebar-right/sidebar-right.js","ui-core/components/sidebar-left/sidebar-left-header.js","ui-core/constants/sidebar-left.js","ui-core/components/sidebar-left/sidebar-left-description.js","ui-core/components/sidebar-left/sidebar-left.js","ui-core/modals/address.js","ui-core/constants/address.js","ui-core/components/layer-selection.js","ui-core/components/main.js","ui-core/constants/header.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["ADD_ADDRESS","SHOW_MODAL","HIDE_MODAL","DISPLAY_UI","initialState","address","showAddressModal","displayUi","actions","addAddress","type","payload","showModal","hideModal","FISH_LAYER","DRINKING_LAYER","SWIMMING_LAYER","Layers","fish","drinking","swimming","selectedLayer","setLayer","state","layer","Object","objectSpread","FIBI_URL","FIBI_BY_SITE_URL","EPA_URL","SAMPLE_RESULTS_URL","ERROR_SHE_GET_WET","ERROR_ADDRESS_NOT_FOUND","ERROR_WATERSHED_NOT_FOUND","HUC_FROM_ADDRESS_URL","WATERSHED_DATA_URL","_callee","url","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","get","params","outFields","outSR","latestWkid","wkid","f","SingleLine","then","response","data","candidates","Promise","reject","firstCandidate","spatialReference","x","location","y","getWatershedData","stop","_callee2","_context2","spatialRel","where","geometryType","inSR","geometry","features","attributes","HUC12","getHucFromAddress","hucid","hucType","catch","error","console","log","getHucBorder","Data","classCallCheck","this","name","unit","value","date","locId","Point","lat","long","datas","huc","baseEpaQuery","_callee3","charName","sampleResult","dataSamples","locationResult","pointSamples","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","key","_context3","getSampleResults","sent","getValueDataFromXml","getEpaStations","getLocationDataFromXml","undefined","keys","Symbol","iterator","done","push","t0","return","finish","xml","activities","DOMParser","parseFromString","getElementsByTagName","samples","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","activity","sample","getTagValue","qualifiedName","tag","childNodes","nodeValue","existing","Date","parse","set","_iterator","err","_callee4","promise","esriGeometry","dataCordsQueryParam","_context4","results","length","rings","forEach","lngLat","substring","concat","locations","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","_iterator2","_callee5","isHuc12","huc8","_context5","sites","filteredSites","filter","site","huc12","resolve","map","id","siteIds","all","fetchFibiDataBySiteId","_callee6","siteId","_context6","sort","b","sampleDate","result","fibiSite","landmark","LatDD","LongDD","fibiData","FIBI","FIBIType","class","FIBIClass","_callee7","characteristicName","query","_context7","dateTwoMonthsAgo","_callee8","_context8","startDate","setMonth","getMonth","toLocaleDateString","replace","_callee9","_context9","api_client","getEcoliData","getNitrateData","getFibiData","getHuc","convertEsriGeometryPolygonToLatLngList","GET_NITRATE_POINTS","GET_ECOLI_POINTS","GET_FIBI_POINTS","getNitratePoints","hucId","dispatch","_this","API","nitrate","getEcoliPoints","logErrorShowModal","_this2","ecoli","getFibiPoints","fibi","GET_HUC","GET_HUC_BORDER","CONVERT_HUC","hucBorder","latLongs","coords","dataPointsActions","border","convertHucToLatLong","i","Number","lng","convertLatLongToCoords","combineReducers","arguments","_ref","dataPoints","nitratePoints","ecoliPoints","fibiPoints","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","Header","props","title","react_default","createElement","className","AppBar_default","position","connect","dataPointsToPlot","coordinatesList","markers","shouldCreateMarkers","dist","disableDefaultUI","google","zoom","initialCenter","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","dataPoint","point","icon","anchor","window","maps","scaledSize","Size","createMarkers","renderMarkers","LegendRow","ranking","score","Typography_default","src","alt","SetLegend","Title","High","Ranking","Score","Med","Low","ranks","Card_default","CardHeader_default","CardContent_default","legend_legend_row","NitrateSection","section1","description","section2","learnMoreLinks","descriptionPart2","section3","EcoliSection","FibiSection","SetDescription","descriptions","variant","_useState","useState","_useState2","slicedToArray","displayDescription","setDisplay","score_legend","Button_default","onClick","index_es","faArrowLeft","show","sidebar_right_sidebar_right_description","renderDescription","determineTitle","waterWarning","warning","learnMoreLink","sidebar_left_header","faArrowRight","sidebar_left_sidebar_left_description","mapDispatchToProps","hucActions","style","display","TextField_default","onChange","e","target","placeholder","CardActions_default","size","color","selectLayer","withStyles","padding-bottom","padding-left","padding-right","padding-top","layerSelection","bottom","cardContainer","text-align","radioGroup","classes","FormControl_default","component","RadioGroup_default","aria-label","event","FormControlLabel_default","control","Radio_default","label","checked","faFish","faSwimmer","faGlassWhiskey","components_header","components_map","layer_selection","sidebar_right_sidebar_right","sidebar_left_sidebar_left","renderUi","ui_core_modals_address","AppTheme","createMuiTheme","palette","primary","blue","secondary","main","typography","useNextVariants","App","es","styles","theme","Component","GoogleApiWrapper","apiKey","process","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bed9307a.chunk.js","sourcesContent":["const ADD_ADDRESS = \"ADD_ADDRESS\";\nconst SHOW_MODAL = \"SHOW_MODAL\";\nconst HIDE_MODAL = \"HIDE_MODAL\";\nconst DISPLAY_UI = \"DISPLAY_UI\";\n\nconst initialState = {\n    address: \"\",\n    showAddressModal: true,\n    displayUi: false\n};\n\nexport const actions = {\n    addAddress(address) {\n        return { type: ADD_ADDRESS, payload: address };\n    },\n    showModal() {\n        return { type: SHOW_MODAL };\n    },\n    hideModal() {\n        return { type: HIDE_MODAL };\n    },\n    displayUi() {\n        return { type: DISPLAY_UI };\n    }\n};\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_ADDRESS: {\n            return {\n                ...state,\n                address: payload\n            };\n        }\n        case SHOW_MODAL: {\n            return {\n                ...state,\n                showAddressModal: true\n            };\n        }\n        case HIDE_MODAL: {\n            return {\n                ...state,\n                showAddressModal: false\n            };\n        }\n        case DISPLAY_UI: {\n            return {\n                ...state,\n                displayUi: true\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const FISH_LAYER = \"FISH_LAYER\";\nconst DRINKING_LAYER = \"DRINKING_LAYER\";\nconst SWIMMING_LAYER = \"SWIMMING_LAYER\";\nexport const Layers = { fish: FISH_LAYER, drinking: DRINKING_LAYER, swimming: SWIMMING_LAYER }\n\nconst initialState = {\n    selectedLayer: DRINKING_LAYER\n}\n\nexport const actions = {\n    selectLayer(layer) {\n        return { type: layer }\n    }\n}\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case FISH_LAYER: {\n            return setLayer(state, FISH_LAYER);\n        }\n        case DRINKING_LAYER: {\n            return setLayer(state, DRINKING_LAYER);\n        }\n        case SWIMMING_LAYER: {\n            return setLayer(state, SWIMMING_LAYER);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction setLayer(state, layer) {\n    return {\n        ...state,\n        selectedLayer: layer\n    }\n}","export const ECOLI_URL = \"https://www.waterqualitydata.us/data/Result/search?\";\nexport const FIBI_URL =\n    \"https://programs.iowadnr.gov/bionet/api/v1/sites/by_huc8/\";\nexport const FIBI_BY_SITE_URL =\n    \"https://programs.iowadnr.gov/bionet/api/v1/fish/fibi/by_site/\";\nexport const EPA_URL = \"https://www.waterqualitydata.us/data/Station/search?\";\nexport const SAMPLE_RESULTS_URL =\n    \"https://www.waterqualitydata.us/data/Result/search?\";\nexport const ERROR_SHE_GET_WET = \"She get wet\";\nexport const ERROR_ADDRESS_NOT_FOUND = \"Address not found\";\nexport const ERROR_WATERSHED_NOT_FOUND = \"Watershed not found\";\nexport const HUC_FROM_ADDRESS_URL =\n    \"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates\";\nexport const WATERSHED_DATA_URL =\n    \"https://inlandwaters.geoplatform.gov/arcgis/rest/services/NHDPlus/WatershedBoundaryDataset/MapServer/10/query\";\nexport const HUC_BORDER_URL =\n    \"https://watersgeo.epa.gov/arcgis/rest/services/NHDPlus_NP21/WBD_NP21_Simplified/MapServer/find?searchText=\";\n","import axios from \"axios\";\nimport { HUC_FROM_ADDRESS_URL, WATERSHED_DATA_URL, ERROR_ADDRESS_NOT_FOUND, ERROR_WATERSHED_NOT_FOUND } from \"./constants/urls\";\n\nasync function getHucFromAddress(address) {\n    var url = HUC_FROM_ADDRESS_URL;\n    return axios\n        .get(url, {\n            params: {\n                outFields: \"Loc_name,City,Place_addr,Region,RegionAbbr,Country\",\n                outSR: { latestWkid: 3857, wkid: 102100 },\n                f: \"json\",\n                SingleLine: address\n            }\n        })\n        .then(response => {\n            if (typeof response.data.candidates[0] === \"undefined\") {\n                return Promise.reject(ERROR_ADDRESS_NOT_FOUND);\n            }\n            var firstCandidate = response.data.candidates[0];\n            return {\n                spatialReference: response.data.spatialReference,\n                x: firstCandidate.location.x,\n                y: firstCandidate.location.y\n            };\n        })\n        .then(location => {\n            return getWatershedData(location);\n        });\n}\n\nasync function getWatershedData(location) {\n    var url = WATERSHED_DATA_URL;\n\n    return axios\n        .get(url, {\n            params: {\n                f: \"json\",\n                outFields: \"HUC12\",\n                spatialRel: \"esriSpatialRelIntersects\",\n                where: \"1=1\",\n                geometryType: \"esriGeometryPoint\",\n                inSR: \"102100\",\n                outSR: \"102100\",\n                geometry: location\n            }\n        })\n        .then(response => {\n            if (typeof response.data.features[0] === \"undefined\") {\n                return Promise.reject(ERROR_WATERSHED_NOT_FOUND);\n            }\n            return response.data.features[0].attributes.HUC12;\n        });\n}\n\nexport default getHucFromAddress;\n","import axios from 'axios';\n\nasync function getHucBorder(hucid, hucType) {\n\n    let url = \"https://watersgeo.epa.gov/arcgis/rest/services/NHDPlus_NP21/WBD_NP21_Simplified/MapServer/find?searchText=\" +\n        hucid + \"&contains=true&searchFields=&sr=&layers=\" +\n        hucType + \"&layerDefs=&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&dynamicLayers=&returnZ\" +\n        \"=false&returnM=false&gdbVersion=&returnUnformattedValues=false&returnFieldName=false&datumTransformations\" +\n        \"=&layerParameterValues=&mapRangeValues=&layerRangeValues=&f=pjson\";\n\n   return axios.get(url).then((response) => {\n        return response;\n    })\n        .catch((error) => {\n            console.log(error);\n            return \"will the water kill me?\";\n        });\n}\n\nexport default getHucBorder;\n","export default class Data {\n    constructor(){\n\tthis.name = \"\";\n\tthis.unit = \"\";\n\tthis.value = 0.0;\n\tthis.date = \"\";\n\tthis.locId = \"\";\n    }\n}","export default class Point {\n    constructor(){\n\tthis.locId = \"\";\n\tthis.name = \"\";\n\tthis.lat = 0.0;\n\tthis.long = 0.0;\n\tthis.datas = [];\n    }\n}","import axios from \"axios\";\nimport {\n    FIBI_URL,\n    FIBI_BY_SITE_URL,\n    EPA_URL,\n    SAMPLE_RESULTS_URL,\n    ERROR_SHE_GET_WET\n} from \"./constants/urls\";\nimport Data from \"./models/data\";\nimport Point from \"./models/point\";\n\n// axios.defaults.timeout = 1000000000;\n\nasync function getEcoliData(huc) {\n    return baseEpaQuery(huc, \"Escherichia%20coli\");\n}\n\nasync function getNitrateData(huc) {\n    return baseEpaQuery(huc, \"Nitrate\");\n}\n\nasync function baseEpaQuery(huc, charName) {\n    let sampleResult = await getSampleResults(huc, charName);\n    let dataSamples = getValueDataFromXml(sampleResult.data)\n\n    let locationResult = await getEpaStations(huc, charName);\n    let pointSamples = getLocationDataFromXml(locationResult.data)\n\n    for (let key of pointSamples.keys()) {\n        let data = dataSamples.get(key);\n        if (data !== undefined) {\n            pointSamples.get(key).datas.push(data);\n        }\n    }\n\n    return pointSamples;\n}\n\nfunction getValueDataFromXml(xml) {\n    let parsedResult = new DOMParser().parseFromString(xml, \"text/xml\");\n    let activities = parsedResult.getElementsByTagName(\"Activity\");\n    let samples = new Map();\n    for (let activity of activities) {\n\t    let sample = new Data();\n        const getTagValue = (qualifiedName) => {\n            let tag = activity.getElementsByTagName(qualifiedName)[0];\n            return (tag === undefined) ? null :tag.childNodes[0].nodeValue;\n        };\n\n        sample.name = getTagValue(\"CharacteristicName\");\n\t    sample.locId = getTagValue(\"MonitoringLocationIdentifier\");\n        sample.date = getTagValue(\"ActivityStartDate\");\n        sample.value = getTagValue(\"ResultMeasureValue\");\n\t    sample.unit = getTagValue(\"MeasureUnitCode\");\n\n        let existing = samples[sample.locId];\n        if (existing == null || (Date.parse(sample.date) > Date.parse(existing.date))) {\n            samples.set(sample.locId, sample);\n        }\n    }\n\n    return samples;\n}\n\nasync function convertEsriGeometryPolygonToLatLngList(promise) {\n    let esriGeometry = promise.data\n    var dataCordsQueryParam = '';\n    if (esriGeometry != null && esriGeometry.results != null && esriGeometry.results.length > 0\n        && esriGeometry.results[0].geometryType != null && esriGeometry.results[0].geometryType === (\"esriGeometryPolygon\")) {\n        esriGeometry.results[0].geometry.rings[0].forEach((lngLat) => {\n            dataCordsQueryParam += lngLat[0] + ',' + lngLat[1] + ';'\n        });\n    }\n\n    dataCordsQueryParam = dataCordsQueryParam.substring(0, dataCordsQueryParam.length - 1); // remove final semicolon\n\n    let url = `https://epsg.io/trans?data=${dataCordsQueryParam}&s_srs=3857&t_srs=4326`\n    return await axios.get(url).catch(error => {console.log(error)});\n}\n\nfunction getLocationDataFromXml(xml) {\n    let parsedResult = new DOMParser().parseFromString(xml, \"text/xml\");\n    let locations = parsedResult.getElementsByTagName(\"MonitoringLocation\");\n    let samples = [];\n    for (let location of locations) {\n\t    let sample = new Point()\n        const getTagValue = (qualifiedName) => {\n            let tag = location.getElementsByTagName(qualifiedName)[0];\n            return (tag === undefined) ? null :tag.childNodes[0].nodeValue;\n        };\n\n        sample.locId = getTagValue(\"MonitoringLocationIdentifier\");\n\t    sample.name = getTagValue(\"MonitoringLocationName\");\n        sample.lat = getTagValue(\"LatitudeMeasure\");\n        sample.long = getTagValue(\"LongitudeMeasure\");\n\n        let existing = samples[sample.locId];\n        if (existing == null || (Date.parse(sample.date) > Date.parse(existing.date))) {\n            samples.push(sample);\n        }\n    }\n\n    return samples;\n}\n\nasync function getFibiData(huc) {\n    var isHuc12 = huc.length === 12;\n    var huc8 = huc.substring(0, 8);\n    var url = FIBI_URL;\n\n    return axios\n        .get(url + huc8)\n        .then(response => {\n            return response.data;\n        })\n        .then(sites => {\n            if (isHuc12) {\n                var filteredSites = sites.filter(site => site.huc12 === huc);\n                return Promise.resolve(filteredSites);\n            }\n            return Promise.resolve(sites);\n        })\n        .then(sites => {\n            return sites.map(site => site.id);\n        })\n        .then(siteIds => {\n            return Promise.all(siteIds.map(fetchFibiDataBySiteId));\n        })\n        .catch(function(error) {\n            // handle error\n            console.log(error);\n            return ERROR_SHE_GET_WET;\n        });\n}\n\nasync function fetchFibiDataBySiteId(siteId) {\n    var url = FIBI_BY_SITE_URL;\n    return axios.get(url + siteId).then(response => {\n        return response.data;\n    }).then(results => {\n        // sort\n        return results.sort((a, b) => {\n            return new Date(b.sampleDate) - new Date(a.sampleDate);\n        });\n    }).then(results => {\n        // most recent\n        return results[0];\n    }).then(result => {\n        var fibiSite = new Point();\n        fibiSite.name = result.site.name + \" - \" + result.site.landmark;\n        fibiSite.lat = result.site.LatDD;\n        fibiSite.long = result.site.LongDD;\n\n        var fibiData = new Data();\n        fibiData.name = \"FIBI\";\n        fibiData.unit = \"rating\";\n        fibiData.value = result.FIBI;\n        fibiData.type = result.FIBIType;\n        fibiData.class = result.FIBIClass;\n        fibiData.date = result.sampleDate;\n\n        fibiSite.datas.push(fibiData);\n        return fibiSite;\n    }).catch(error => {\n        console.log(error);\n    });\n}\n\nasync function getEpaStations(huc, characteristicName) {\n    let query = EPA_URL + `startDate=${dateTwoMonthsAgo()}&huc=${huc}&mimeType=xml&characteristicName=${characteristicName}`;\n    return axios\n        .get(query)\n        .then(function(response) {\n            // handle success\n            return response;\n        })\n        .catch(function(error) {\n            // handle error\n            return ERROR_SHE_GET_WET;\n        });\n}\n\nasync function getSampleResults(huc, characteristicName) {\n    var url = SAMPLE_RESULTS_URL + `startDate=${dateTwoMonthsAgo()}&huc=${huc}&mimeType=xml&characteristicName=${characteristicName}`;\n\n    return axios.get(url).then().catch(error => {\n        console.log(error);\n    });\n}\n\nfunction dateTwoMonthsAgo() {\n    let startDate = new Date();\n    startDate.setMonth(startDate.getMonth() - 2);\n    return startDate.toLocaleDateString().replace(/\\//g, '-')\n}\n\nasync function getHuc(lat, long) {}\n\nexport default {\n    getEcoliData,\n    getNitrateData,\n    getFibiData,\n    getEpaStations,\n    getSampleResults,\n    getHuc,\n    convertEsriGeometryPolygonToLatLngList\n};\n","import API from \"../../server-core/api-client\";\n\nconst GET_NITRATE_POINTS = \"GET_NITRATE_POINTS\";\nconst GET_ECOLI_POINTS = \"GET_ECOLI_POINTS\";\nconst GET_FIBI_POINTS = \"GET_FIBI_POINTS\";\n\nexport const actions = {\n    getNitratePoints(hucId, dispatch) {\n        API.getNitrateData(hucId)\n            .then(nitrate => {\n                dispatch({ type: GET_NITRATE_POINTS, payload: nitrate });\n                this.getEcoliPoints(hucId, dispatch);\n            })\n            .catch(error => {\n                logErrorShowModal(dispatch, error);\n            });\n    },\n\n    getEcoliPoints(hucId, dispatch) {\n        API.getEcoliData(hucId)\n            .then(ecoli => {\n                dispatch({ type: GET_ECOLI_POINTS, payload: ecoli });\n                this.getFibiPoints(hucId, dispatch);\n            })\n            .catch(error => {\n                logErrorShowModal(dispatch, error);\n            });\n    },\n\n    getFibiPoints(hucId, dispatch) {\n        API.getFibiData(hucId)\n            .then(fibi => {\n                dispatch({ type: GET_FIBI_POINTS, payload: fibi });\n            })\n            .catch(error => {\n                logErrorShowModal(dispatch, error);\n            });\n    }\n};\n\nexport function reducer(state = {}, { type, payload }) {\n    switch (type) {\n        case GET_NITRATE_POINTS: {\n            return {\n                ...state,\n                nitratePoints: payload\n            };\n        }\n        case GET_ECOLI_POINTS: {\n            return {\n                ...state,\n                ecoliPoints: payload\n            };\n        }\n        case GET_FIBI_POINTS: {\n            return {\n                ...state,\n                fibiPoints: payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nfunction logErrorShowModal(dispatch, error) {\n    console.log(\"Get Data Points Error: \", error);\n    dispatch({ type: \"SHOW_MODAL\" });\n}\n","import getHucFromAddress from \"../../server-core/location-service\";\nimport getHucBorder from \"../../server-core/border-data-api\";\nimport API from \"../../server-core/api-client\";\nimport { actions as dataPointsActions } from \"./data-points\";\n\nconst GET_HUC = \"GET_HUC\";\nconst GET_HUC_BORDER = \"GET_HUC_BORDER\";\nconst CONVERT_HUC = \"CONVERT_HUC\";\n\nconst initialState = {\n    hucId: '',\n    hucBorder: {},\n    latLongs: [],\n    coords: []\n}\n\nexport const actions = {\n    getHuc(address) {\n        return dispatch => {\n            getHucFromAddress(address)\n                .then(hucId => {\n                    dispatch({ type: GET_HUC, payload: hucId });\n                    this.getHucBorder(hucId);\n                    dataPointsActions.getNitratePoints(hucId, dispatch);\n                })\n                .catch(error => {\n                    logErrorShowModal(dispatch, error);\n                });\n        };\n    },\n\n    getHucBorder(hucId) {\n        return dispatch => {\n            getHucBorder(hucId, \"huc_12\")\n                .then(border => {\n                    dispatch({ type: GET_HUC_BORDER, payload: border });\n                    this.convertHucToLatLong(border);\n                })\n                .catch(error => {\n                    logErrorShowModal(dispatch, error);\n                });\n        };\n    },\n\n    convertHucToLatLong(border) {\n        return dispatch => {\n            API.convertEsriGeometryPolygonToLatLngList(border)\n                .then(result => {\n                    var latLongs = result.data;\n                    var coords = convertLatLongToCoords(latLongs);\n                    dispatch({\n                        type: CONVERT_HUC,\n                        payload: { latLongs, coords }\n                    });\n                })\n                .catch(error => {\n                    logErrorShowModal(dispatch, error);\n                });\n        };\n    }\n};\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case GET_HUC: {\n            return {\n                ...state,\n                hucId: payload\n            };\n        }\n        case GET_HUC_BORDER: {\n            return {\n                ...state,\n                hucBorder: payload\n            };\n        }\n        case CONVERT_HUC: {\n            return {\n                ...state,\n                latLongs: payload.latLongs,\n                coords: payload.coords\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nfunction logErrorShowModal(dispatch, error) {\n    console.log(\"Get Huc Info Error: \", error);\n    dispatch({ type: \"SHOW_MODAL\" });\n}\n\nexport function convertLatLongToCoords(latLongs) {\n    let coords = [];\n    for (var i = 0; i < latLongs.length; i++) {\n        coords.push({\n            lat: Number(latLongs[i].y),\n            lng: Number(latLongs[i].x)\n        });\n    }\n    return coords;\n}\n","import { combineReducers } from \"redux\";\nimport * as address from \"./address\";\nimport * as layer from \"./layer\";\nimport * as huc from \"./huc\";\nimport * as dataPoints from \"./data-points\";\n\nexport default combineReducers({\n    address: address.reducer,\n    layer: layer.reducer,\n    huc: huc.reducer,\n    dataPoints: dataPoints.reducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport \"./header.css\";\n\nconst Header = props => {\n    const { title } = props;\n    return (\n        <div className=\"header\">\n            <AppBar position=\"static\">\n                <label>{title}</label>\n            </AppBar>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Map, Marker, Polygon } from \"google-maps-react\";\n\nimport { connect } from \"react-redux\";\n\nimport \"./map.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        dataPointsToPlot: state.dataPoints.nitratePoints,\n        coordinatesList: state.huc.coords\n    };\n}\n\nconst PlottedMap = props => {\n    let markers = [];\n    let shouldCreateMarkers = true;\n    function createMarkers() {\n        if (\n            props.dataPointsToPlot !== undefined &&\n            props.dataPointsToPlot !== []\n        ) {\n            for (var dataPoint of props.dataPointsToPlot) {\n                markers.push(createMarker(dataPoint));\n            }\n            if (markers.length > 0) {\n            }\n        }\n    }\n\n    function createMarker(point) {\n        let url = \"/images/low.png\";\n        return (\n            <Marker\n                key={point.locId}\n                position={{ lat: point.lat, lng: point.long }}\n                icon={{\n                    url: url,\n                    anchor: new window.google.maps.Point(24, 24),\n                    scaledSize: new window.google.maps.Size(48, 48)\n                }}\n            />\n        );\n    }\n\n    function renderMarkers() {\n        if (shouldCreateMarkers) {\n            createMarkers();\n        }\n\n        if (markers.length > 0) {\n            return markers;\n        }\n    }\n\n    return (\n        <Map\n            className=\"map\"\n            disableDefaultUI={true}\n            google={props.google}\n            zoom={13}\n            initialCenter={{ lat: 41.583586, lng: -93.628419 }}\n        >\n            <Polygon\n                paths={props.coordinatesList}\n                strokeColor=\"#0000FF\"\n                strokeOpacity={0.8}\n                strokeWeight={2}\n                fillColor=\"#0000FF\"\n                fillOpacity={0.35}\n            />\n\n            {renderMarkers()}\n        </Map>\n    );\n};\n\nexport default connect(mapStateToProps)(PlottedMap);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./legend-row.css\";\n\nconst LegendRow = props => {\n    const { ranking, score, icon } = props;\n    return (\n        <div className=\"row\">\n            <Typography className=\"text\">{ranking}</Typography>\n            <Typography className=\"text\">{score}</Typography>\n            <img className=\"icon\" src={icon} alt=\"scoreIconImage\"/>\n        </div>\n    );\n};\n\nLegendRow.propTypes = {\n    ranking: PropTypes.string.isRequired,\n    score: PropTypes.string.isRequired\n};\n\nexport default LegendRow;\n","export const FISH_LAYER = \"FISH_LAYER\";\nexport const SWIMMING_LAYER = \"SWIMMING_LAYER\";\nexport const DRINKING_LAYER = \"DRINKING_LAYER\";","import React from \"react\";\nimport {connect} from 'react-redux';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport LegendRow from \"./legend-row\";\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    SWIM_LEGEND_HIGH,\n    SWIM_LEGEND_HIGH_SCORE,\n    SWIM_LEGEND_MEDIUM,\n    SWIM_LEGEND_MEDIUM_SCORE,\n    SWIM_LEGEND_LOW,\n    SWIM_LEGEND_LOW_SCORE,\n    SWIM_LEGEND_TITLE,\n    FISH_LEGEND_TITLE,\n    DRINKING_LEGEND_TITLE,\n    DRINKING_LEGEND_SAFE,\n    DRINKING_LEGEND_SAFE_SCORE,\n    DRINKING_LEGEND_POLLUTED,\n    DRINKING_LEGEND_POLLUTED_SCORE,\n    DRINKING_LEGEND_EXTREME,\n    DRINKING_LEGEND_EXTREME_SCORE\n} from \"../../constants/legend\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    }\n}\n\nconst ScoreLegend = props => {\n    const ranks = SetLegend(props.selectedLayer);\n    return (\n        <Card className=\"legend\">\n            <CardHeader className=\"title\" title={ranks.Title} />\n            <CardContent>\n                <LegendRow\n                    ranking={ranks.High.Ranking}\n                    score={ranks.High.Score}\n                    icon={ranks.High.icon}\n                />\n                <LegendRow\n                    ranking={ranks.Med.Ranking}\n                    score={ranks.Med.Score}\n                    icon={ranks.Med.icon}\n                />\n                <LegendRow\n                    ranking={ranks.Low.Ranking}\n                    score={ranks.Low.Score}\n                    icon={ranks.Low.icon}\n                />\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetLegend = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return {\n                Title: SWIM_LEGEND_TITLE,\n                High: {\n                    Ranking: SWIM_LEGEND_HIGH,\n                    Score: SWIM_LEGEND_HIGH_SCORE,\n                    icon: \"/images/high.png\"\n                },\n                Med: {\n                    Ranking: SWIM_LEGEND_MEDIUM,\n                    Score: SWIM_LEGEND_MEDIUM_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: SWIM_LEGEND_LOW,\n                    Score: SWIM_LEGEND_LOW_SCORE,\n                    icon: \"/images/low.png\"\n                }\n            };\n        case FISH_LAYER:\n            return {\n                Title: FISH_LEGEND_TITLE,\n                High: {\n                    Ranking: SWIM_LEGEND_HIGH,\n                    Score: SWIM_LEGEND_HIGH_SCORE,\n                    icon: \"/images/low.png\"\n                },\n                Med: {\n                    Ranking: SWIM_LEGEND_MEDIUM,\n                    Score: SWIM_LEGEND_MEDIUM_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: SWIM_LEGEND_LOW,\n                    Score: SWIM_LEGEND_LOW_SCORE,\n                    icon: \"/images/high.png\"\n                }\n            };\n        default: {\n            return {\n                Title: DRINKING_LEGEND_TITLE,\n                High: {\n                    Ranking: DRINKING_LEGEND_SAFE,\n                    Score: DRINKING_LEGEND_SAFE_SCORE,\n                    icon: \"/images/low.png\"\n                },\n                Med: {\n                    Ranking: DRINKING_LEGEND_POLLUTED,\n                    Score: DRINKING_LEGEND_POLLUTED_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: DRINKING_LEGEND_EXTREME,\n                    Score: DRINKING_LEGEND_EXTREME_SCORE,\n                    icon: \"/images/high.png\"\n                }\n            };\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(ScoreLegend);\n","export const FISH_LEGEND_TITLE = \"Diversity\";\nexport const FISH_LEGEND_GOOD = \"Good,\";\nexport const FISH_LEGEND_GOOD_SCORE = \"51 - 70\";\n\nexport const FISH_LEGEND_LACKING = \"Lacking,\";\nexport const FISH_LEGEND_LACKING_SCORE = \"31 - 50\";\n\nexport const FISH_LEGEND_VERYLOW = \"Very Low,\";\nexport const FISH_LEGEND_VERYLOW_SCORE = \"0 - 30\";\n\nexport const SWIM_LEGEND_TITLE = \"Risk Per 100 mL:\";\nexport const SWIM_LEGEND_LOW = \"Low,\";\nexport const SWIM_LEGEND_LOW_SCORE = \"Under 126\";\n\nexport const SWIM_LEGEND_MEDIUM = \"Medium,\";\nexport const SWIM_LEGEND_MEDIUM_SCORE = \"Over 126\";\n\nexport const SWIM_LEGEND_HIGH = \"High,\";\nexport const SWIM_LEGEND_HIGH_SCORE = \"Over 235\";\n\nexport const DRINKING_LEGEND_TITLE = \"Pollution mg/L:\";\nexport const DRINKING_LEGEND_SAFE = \"Safe,\";\nexport const DRINKING_LEGEND_SAFE_SCORE = \"0-5\";\n\nexport const DRINKING_LEGEND_POLLUTED = \"Polluted,\";\nexport const DRINKING_LEGEND_POLLUTED_SCORE = \"6-10\";\n\nexport const DRINKING_LEGEND_EXTREME = \"Extreme,\";\nexport const DRINKING_LEGEND_EXTREME_SCORE = \"Over 10\";\n","const Nitrate_Section1Title = \"Levels: \";\nconst Nitrate_Section1Description =\n    \"Nitrate levels reflect risks to human health from long-term ingestion of tap water\";\n\nconst Nitrate_Section2Title = \"Standard: \";\nconst Nitrate_Section2Description =\n    \"The EPA sets national drinking water standards.\";\nconst Nitrate_Section2EPALearnMoreLink = \"\";\nconst Nitrate_Section2DescriptionPart2 =\n    \"University of Iowa researched health risks for women.\";\nconst Nitrate_Section2UoILearnMoreLink = \"\";\n\nconst Nitrate_Section3Title = \"Users: \";\nconst Nitrate_Section3Description = \"Municipal water works and wells\";\n\nconst Ecoli_Section1Title = \"Levels: \";\nconst Ecoli_Section1Description =\n    \"E. Coli levels reflect risks to human health from skin exposure and limited ingestion.\";\n\nconst Ecoli_Section2Title = \"Standard: \";\nconst Ecoli_Section2Description =\n    \"The Iowa DNR tests E. Coli levels. Five consecutive samples over 126 per mL or one sample over 235 consitute an advisory.\";\nconst Ecoli_Section2LearnMoreLink = \"\";\n\nconst Ecoli_Section3Title = \"Users: \";\nconst Ecoli_Section3Description = \"Swimmins, canoers, and kayakers\";\n\nconst Fibi_Section1Title = \"Diversity: \";\nconst Fibi_Section1Description =\n    \"FIBI scores reflect aquatic diversity which supports other area wildlife populations.\";\n\nconst Fibi_Section2Title = \"Standard: \";\nconst Fibi_Section2Description =\n    \"The Iowa DNR calculates FIBI and BMIBI scores for different eco-regions roughly every three years.\";\nconst Fibi_Section2LearnMoreLink = \"\";\n\nconst Fibi_Section3Title = \"Users: \";\nconst Fibi_Section3Description = \"Anglers, hunters, and birders.\";\n\nexport const NitrateSection = {\n    section1: {\n        title: Nitrate_Section1Title,\n        description: Nitrate_Section1Description\n    },\n    section2: {\n        title: Nitrate_Section2Title,\n        description: Nitrate_Section2Description,\n        learnMoreLinks: [Nitrate_Section2EPALearnMoreLink, Nitrate_Section2UoILearnMoreLink],\n        descriptionPart2: Nitrate_Section2DescriptionPart2\n    },\n    section3: {\n        title: Nitrate_Section3Title,\n        description: Nitrate_Section3Description\n    }\n};\n\nexport const EcoliSection = {\n    section1: {\n        title: Ecoli_Section1Title,\n        description: Ecoli_Section1Description\n    },\n    section2: {\n        title: Ecoli_Section2Title,\n        description: Ecoli_Section2Description,\n        learnMoreLinks: [Ecoli_Section2LearnMoreLink]\n    },\n    section3: {\n        title: Ecoli_Section3Title,\n        description: Ecoli_Section3Description\n    }\n};\n\nexport const FibiSection = {\n    section1: {\n        title: Fibi_Section1Title,\n        description: Fibi_Section1Description\n    },\n    section2: {\n        title: Fibi_Section2Title,\n        description: Fibi_Section2Description,\n        learnMoreLinks: [Fibi_Section2LearnMoreLink]\n    },\n    section3: {\n        title: Fibi_Section3Title,\n        description: Fibi_Section3Description\n    }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    FibiSection,\n    NitrateSection,\n    EcoliSection\n} from \"../../constants/sidebar-right\";\nimport \"./sidebar-right-description.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarRightDescription = props => {\n    const descriptions = SetDescription(props.selectedLayer);\n    return (\n        <Card className=\"description-container\">\n            <CardContent>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section1.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section1.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section2.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section2.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section3.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section3.description}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetDescription = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return EcoliSection;\n        case FISH_LAYER:\n            return FibiSection;\n        case DRINKING_LAYER:\n            return NitrateSection;\n            default:\n            return NitrateSection;\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarRightDescription);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ScoreLegend from \"../legend/score-legend\";\nimport SidebarRightDescription from \"./sidebar-right-description\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./sidebar-right.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.selectedLayer\n    };\n}\n\nfunction renderDescription(show) {\n    if (show) {\n        return <SidebarRightDescription />;\n    }\n}\n\nconst SidebarRight = props => {\n    const [displayDescription, setDisplay] = useState(false);\n    return (\n        <div className=\"container-right\">\n            <ScoreLegend />\n            <Button\n                variant=\"contained\"\n                className=\"button\"\n                onClick={handleClick}\n            >\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </Button>\n            {renderDescription(displayDescription)}\n        </div>\n    );\n    function handleClick() {\n        setDisplay(!displayDescription);\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarRight);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarLeftHeader = props => {\n    return (\n        <Card>\n            <CardHeader title={determineTitle(props.selectedLayer)}>\n            </CardHeader>\n        </Card>\n    );\n\n    function determineTitle(layer) {\n        switch (layer) {\n            case DRINKING_LAYER:\n                return \"Nitrates\";\n            case SWIMMING_LAYER:\n                return \"E. Coli\";\n            case FISH_LAYER:\n                return \"FIBI Scores\";\n            default:\n                return \"No layer selected\";\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeftHeader);\n","const waterWarning =\n    \"A single data point can never give a full picture of water quality\";\n\nconst Section1Title = \"Metric: \";\nconst Section2Title = \"Other Metrics: \";\n\nconst Nitrate_Section1Description =\n    \"Nitrates can be a nutrient or a pollutant. Potable tap water has Max Contaminant Levels from ingestion over long periods of time. This is NOT the same as limited ingestion from recreating in bodies of water.\";\nconst Nitrate_Section1LearnMoreLink = \"\";\n\nconst Nitrate_Section2Description = \"Phosphates\";\nconst Nitrate_Section2LearnMoreLink = \"\";\n\nconst Ecoli_Section1Description =\n    \"Escherichia coli(E.coli) bacteria occurs naturally in the body, so is not necessarily disease-causing. High levels are used to conservatively test the likelihood of an infectious dose for human health.\";\nconst Ecoli_Section1LearnMoreLink = \"\";\n\nconst Ecoli_Section2Description = \"Coliform bacteria.\";\nconst Ecoli_Section2LearnMoreLink = \"\";\n\nconst Fibi_Section1Description =\n    \"Fish Index of Biotic Integrity(FIBI) scores are a composite index combining twelve metrics for a community-level assessment of stream biological conditions.\";\nconst Fibi_Section1LearnMoreLink = \"\";\n\nconst Fibi_Section2Description =\n    \"Benthic Macroinvertebrate(BMIBI) scores can predict changes to FIBI scores.\";\nconst Fibi_Section2LearnMoreLink = \"\";\n\nexport const NitrateSection = {\n    warning: waterWarning,\n    section1: {\n        title: Section1Title,\n        description: Nitrate_Section1Description,\n        learnMoreLink: Nitrate_Section1LearnMoreLink\n    },\n    section2: {\n        title: Section2Title,\n        description: Nitrate_Section2Description,\n        learnMoreLink: Nitrate_Section2LearnMoreLink\n    }\n}\nexport const EcoliSection = {\n    warning: waterWarning,\n    section1: {\n        title: Section1Title,\n        description: Ecoli_Section1Description,\n        learnMoreLink: Ecoli_Section1LearnMoreLink\n    },\n    section2: {\n        title: Section2Title,\n        description: Ecoli_Section2Description,\n        learnMoreLink: Ecoli_Section2LearnMoreLink\n    }\n}\nexport const FibiSection = {\n    warning: waterWarning,\n    section1: {\n        title: Section1Title,\n        description: Fibi_Section1Description,\n        learnMoreLink: Fibi_Section1LearnMoreLink\n    },\n    section2: {\n        title: Section2Title,\n        description: Fibi_Section2Description,\n        learnMoreLink: Fibi_Section2LearnMoreLink\n    }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    FibiSection,\n    NitrateSection,\n    EcoliSection\n} from \"../../constants/sidebar-left\";\nimport \"./sidebar-left-description.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarLeftDescription = props => {\n    const descriptions = SetDescription(props.selectedLayer);\n    return (\n        <Card className=\"description-container\">\n            <CardContent>\n                <Typography>{descriptions.warning}</Typography>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section1.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section1.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section2.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section2.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section3.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section3.description}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetDescription = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return EcoliSection;\n        case FISH_LAYER:\n            return FibiSection;\n        case DRINKING_LAYER:\n            return NitrateSection;\n        default:\n            return NitrateSection;\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeftDescription);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport SidebarLeftHeader from \"./sidebar-left-header\";\nimport SidebarLeftDescription from \"./sidebar-left-description\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./sidebar-left.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.selectedLayer\n    };\n}\n\nfunction renderDescription(show) {\n    if (show) {\n        return <SidebarLeftDescription />;\n    }\n}\n\nconst SidebarLeft = props => {\n    const [displayDescription, setDisplay] = useState(false);\n    return (\n        <div className=\"container-left\">\n            <SidebarLeftHeader />\n            <Button\n                variant=\"contained\"\n                className=\"button\"\n                onClick={handleClick}\n            >\n                <FontAwesomeIcon icon={faArrowRight} />\n            </Button>\n            {renderDescription(displayDescription)}\n        </div>\n    );\n    function handleClick() {\n        setDisplay(!displayDescription);\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeft);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n    ADDRESS_MODAL_TITLE,\n    ADDRESS_MODAL_INPUT_PLACEHOLDER\n} from \"../constants/address\";\nimport \"./address.css\";\n\nimport { actions } from \"../dux/address\";\nimport { actions as hucActions } from \"../dux/huc\";\nimport { connect } from \"react-redux\";\n\nfunction mapStateToProps(state) {\n    return {\n        address: state.address.address,\n        showAddressModal: state.address.showAddressModal\n    };\n}\n\nconst mapDispatchToProps = {\n    ...actions,\n    ...hucActions\n};\n\nconst AddressModal = props => {\n    return (\n        <Card className=\"modal\" style={displayModal()}>\n            <CardHeader className=\"title\" title={ADDRESS_MODAL_TITLE} />\n            <CardContent>\n                <TextField\n                    className=\"address\"\n                    type=\"text\"\n                    onChange={handleOnChange}\n                    placeholder={ADDRESS_MODAL_INPUT_PLACEHOLDER}\n                />\n            </CardContent>\n            <CardActions>\n                <Button\n                    className=\"nextButton\"\n                    size=\"medium\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                >\n                    NEXT\n                </Button>\n                ;\n            </CardActions>\n        </Card>\n    );\n\n    function handleSubmit() {\n        props.getHuc(props.address);\n        props.hideModal();\n        props.displayUi();\n    }\n\n    function handleOnChange(e) {\n        props.addAddress(e.target.value);\n    }\n\n    function displayModal() {\n        return props.showAddressModal\n            ? { display: \"block\" }\n            : { display: \"none\" };\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddressModal);\n","export const ADDRESS_MODAL_TITLE = 'TYPE YOUR ADDRESS';\nexport const ADDRESS_MODAL_INPUT_PLACEHOLDER = 'Enter Address Here...';","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { actions, Layers } from \"../dux/layer\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faFish,\n    faSwimmer,\n    faGlassWhiskey\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = () => ({\n    title: {\n        \"padding-bottom\": 0,\n        \"padding-left\": \"5px\",\n        \"padding-right\": \"5px\",\n        \"padding-top\": \"5px\"\n    },\n    layerSelection: {\n        position: \"fixed\",\n        bottom: 0\n    },\n    cardContainer: {\n        \"text-align\": \"left\"\n    },\n    radioGroup: {\n        \"text-align\": \"left\"\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst LayerSelection = props => {\n    const { classes } = props;\n    return (\n        <Card className={classes.layerSelection}>\n            <CardHeader\n                className={classes.title}\n                title={\"Select activity of interest:\"}\n            />\n            <CardContent className={classes.cardContainer}>\n                <FormControl component=\"fieldset\">\n                    <RadioGroup\n                        aria-label=\"Activity\"\n                        name=\"activity_type\"\n                        value={props.selectedLayer}\n                        onChange={handleChange}\n                    >\n                        <div className={classes.radioGroup}>\n                            <FormControlLabel\n                                value={Layers.fish}\n                                control={<Radio />}\n                                label=\"Fishing\"\n                                checked={props.selectedLayer === Layers.fish}\n                            />\n                            <FontAwesomeIcon icon={faFish} />\n                        </div>\n\n                        <div className={classes.radioGroup}>\n                            <FormControlLabel\n                                value={Layers.swimming}\n                                control={<Radio />}\n                                label=\"Swimming\"\n                                checked={props.selectedLayer === Layers.swimming}\n                            \n                            />\n                            <FontAwesomeIcon icon={faSwimmer} />\n                        </div>\n\n                        <div className={classes.radioGroup}>\n                            <FormControlLabel\n                                value={Layers.drinking}\n                                control={<Radio />}\n                                label=\"Drinking\"\n                                checked={props.selectedLayer === Layers.drinking}\n                            \n                            />\n                            <FontAwesomeIcon icon={faGlassWhiskey} />\n                        </div>\n                    </RadioGroup>\n                </FormControl>\n            </CardContent>\n        </Card>\n    );\n\n    function handleChange(event) {\n        props.selectLayer(event.target.value);\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    actions\n)(withStyles(styles)(LayerSelection));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./header\";\nimport PlottedMap from \"./map\";\nimport SidebarRight from \"./sidebar-right/sidebar-right\";\nimport SidebarLeft from \"./sidebar-left/sidebar-left\";\nimport AddressModal from \"../modals/address\";\nimport LayerSelection from \"./layer-selection\";\nimport { HEADER_TITLE } from \"../constants/header\";\n\nfunction mapStateToProps(state) {\n    return {\n        displayUi: state.address.displayUi\n    };\n}\n\nconst Main = props => {\n    return (\n        <div className=\"main\">\n            <Header title={HEADER_TITLE} />\n            <PlottedMap google={props.google} />\n            {renderUi()}\n            <AddressModal />\n        </div>\n    );\n\n    function renderUi() {\n        if (props.displayUi) {\n            return (\n                <div>\n                    <LayerSelection />\n                    <SidebarRight displayDescription={false} />\n                    <SidebarLeft displayDescription={false}/>\n                </div>\n            );\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(Main);\n","export const HEADER_TITLE = \"Find Water Quality Data Near Me\";","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nconst AppTheme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: {\n            main: \"#84ffff\"\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nexport default AppTheme;","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./ui-core/dux/store\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Main from \"./ui-core/components/main\";\n\nimport AppTheme from \"./theme\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <MuiThemeProvider theme={AppTheme}>\n                    <div className=\"App\">\n                        <Main {...this.props} />\n                    </div>\n                </MuiThemeProvider>\n            </Provider>\n        );\n    }\n}\n\nconst loadAPIKey = () => {\n    if (process.env.NODE_ENV === \"development\") {\n        return process.env.REACT_APP_DEV_GOOGLE_MAPS;\n    }\n    return process.env.REACT_APP_PROD_GOOGLE_MAPS;\n};\n\nexport default GoogleApiWrapper({\n    apiKey: loadAPIKey()\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}