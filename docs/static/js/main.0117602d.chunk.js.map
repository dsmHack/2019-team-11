{"version":3,"sources":["ui-core/dux/address.js","ui-core/dux/layer.js","server-core/constants/urls.js","server-core/location-service.js","server-core/border-data-api.js","server-core/models/data.js","server-core/models/point.js","server-core/api-client.js","ui-core/dux/appState.js","ui-core/dux/data-points.js","ui-core/dux/huc.js","ui-core/dux/index.js","ui-core/dux/store.js","ui-core/components/list-item-with-icon.js","ui-core/components/app-drawer.js","ui-core/components/navbar.js","ui-core/components/header.js","constants_shared/layers.js","ui-core/components/marker-score.js","ui-core/components/map.js","ui-core/components/legend/legend-row.js","ui-core/components/legend/score-legend.js","ui-core/constants/legend.js","ui-core/constants/sidebar-right.js","ui-core/components/sidebar-right/sidebar-right-description.js","ui-core/components/sidebar-right/sidebar-right.js","ui-core/components/sidebar-left/sidebar-left-header.js","ui-core/constants/sidebar-left.js","ui-core/components/sidebar-left/sidebar-left-description.js","ui-core/components/sidebar-left/sidebar-left.js","ui-core/modals/address.js","ui-core/constants/address.js","ui-core/components/main.js","ui-core/constants/header.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["ADD_ADDRESS","SHOW_MODAL","HIDE_MODAL","DISPLAY_UI","initialState","address","showAddressModal","displayUi","actions","addAddress","type","payload","showModal","hideModal","FISH_LAYER","DRINKING_LAYER","SWIMMING_LAYER","Layers","fish","drinking","swimming","selectedLayer","selectors","getSelectedLayer","state","layer","setLayer","Object","objectSpread","FIBI_URL","FIBI_BY_SITE_URL","EPA_URL","SAMPLE_RESULTS_URL","ERROR_SHE_GET_WET","ERROR_ADDRESS_NOT_FOUND","ERROR_WATERSHED_NOT_FOUND","HUC_FROM_ADDRESS_URL","WATERSHED_DATA_URL","_callee","url","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","get","params","outFields","outSR","latestWkid","wkid","f","SingleLine","then","response","data","candidates","Promise","reject","firstCandidate","spatialReference","x","location","y","getWatershedData","stop","_callee2","_context2","spatialRel","where","geometryType","inSR","geometry","features","attributes","HUC12","getHucFromAddress","hucid","hucType","catch","error","console","log","getHucBorder","Data","classCallCheck","this","name","unit","value","date","locId","Point","lat","long","datas","huc","baseEpaQuery","_callee3","charName","sampleResult","dataSamples","locationResult","pointSamples","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_loop3","_iterator3","_step3","_context3","getSampleResults","sent","getValueDataFromXml","getEpaStations","getLocationDataFromXml","undefined","point","filter","d","Symbol","iterator","done","t0","return","finish","xml","activities","DOMParser","parseFromString","getElementsByTagName","samples","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","activity","sample","getTagValue","qualifiedName","tag","childNodes","nodeValue","existing","Date","parse","push","_iterator","err","_callee4","promise","esriGeometry","dataCordsQueryParam","_context4","results","length","rings","forEach","lngLat","substring","concat","locations","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","_iterator2","_callee5","isHuc12","huc8","_context5","sites","filteredSites","site","huc12","resolve","map","id","siteIds","all","fetchFibiDataBySiteId","_callee6","siteId","_context6","sort","b","sampleDate","result","fibiSite","landmark","LatDD","LongDD","fibiData","FIBI","FIBIType","class","FIBIClass","_callee7","characteristicName","query","_context7","dateTwoMonthsAgo","_callee8","_context8","startDate","setMonth","getMonth","toLocaleDateString","replace","_callee9","_context9","api_client","getEcoliData","getNitrateData","getFibiData","getHuc","convertEsriGeometryPolygonToLatLngList","isLoading","loaded","GET_NITRATE_POINTS","GET_ECOLI_POINTS","GET_FIBI_POINTS","getNitratePoints","hucId","dispatch","nitrate","API","getEcoliPoints","ecoli","getFibiPoints","fibi","fetchDataPoints","_ref","asyncToGenerator","mark","appStateActions","_x","apply","arguments","FETCHING_HUC","GET_HUC","GET_HUC_BORDER","CONVERT_HUC","HUC_LOADED","hucBorder","latLongs","coords","getHucName","fetchHucs","border","dataPointsActions","convertLatLongToCoords","i","Number","lng","combineReducers","_ref2","dataPoints","nitratePoints","ecoliPoints","fibiPoints","appState","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","withStyles","theme","_drawerIcon","drawerIcon","justifyContent","alignItems","height","spacing","width","defineProperty","breakpoints","up","active","color","palette","primary","text","icon","classes","onClick","isActive","react_default","createElement","ListItem_default","button","key","ListItemIcon_default","className","index_es","style","ListItemText_default","StyledAppDrawer","_toolbar","drawer","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","toolbar","_classNames","_classNames2","handleDrawerClose","open","selectLayer","Drawer_default","variant","classNames","paper","IconButton_default","faChevronLeft","Divider_default","List_default","list_item_with_icon","faGlassWhiskey","faFish","faSwimmer","connect","StyledComponent","_menuButton","appBar","zIndex","appBarShift","marginLeft","menuButton","hide","display","padding","mixins","content","flexGrow","props","AppBar_default","position","Toolbar_default","disableGutters","aria-label","faBars","Typography_default","noWrap","title","LinearProgress_default","root","children","_useState","useState","_useState2","slicedToArray","setOpen","navbar","app_drawer","FibiScores","Good","Lackin","VeryLow","EcoliScores","Low","Medium","High","NitrateScores","Safe","Polluted","Extreme","highImage","medImage","lowImage","coordinatesList","markers","shouldCreateMarkers","createMarkers","setDataPoints","dataPoint","createMarker","score","Error","determineMarkerIcon","newest","determineMostRecentDate","dist","anchor","window","google","maps","scaledSize","Size","disableDefaultUI","zoom","initialCenter","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","renderMarkers","LegendRow","ranking","src","alt","SetLegend","Title","Ranking","Score","Med","ranks","Card_default","CardHeader_default","CardContent_default","legend_legend_row","NitrateSection","section1","description","section2","learnMoreLinks","descriptionPart2","section3","EcoliSection","FibiSection","SetDescription","descriptions","displayDescription","setDisplay","score_legend","Button_default","faArrowLeft","show","sidebar_right_sidebar_right_description","renderDescription","determineTitle","warning","learnMoreLink","sidebar_left_header","faArrowRight","sidebar_left_sidebar_left_description","mapDispatchToProps","hucActions","Dialog_default","onClose","handleSubmit","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","onChange","e","target","placeholder","fullWidth","margin","DialogActions_default","hucName","header","components_map","ui_core_modals_address","AppTheme","createMuiTheme","blue","secondary","main","typography","useNextVariants","App","es","core_styles","Component","GoogleApiWrapper","apiKey","process","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0117602d.chunk.js","sourcesContent":["const ADD_ADDRESS = \"ADD_ADDRESS\";\nconst SHOW_MODAL = \"SHOW_MODAL\";\nconst HIDE_MODAL = \"HIDE_MODAL\";\nconst DISPLAY_UI = \"DISPLAY_UI\";\n\nconst initialState = {\n    address: \"\",\n    showAddressModal: true,\n    displayUi: false\n};\n\nexport const actions = {\n    addAddress(address) {\n        return { type: ADD_ADDRESS, payload: address };\n    },\n    showModal() {\n        return { type: SHOW_MODAL };\n    },\n    hideModal() {\n        return { type: HIDE_MODAL };\n    },\n    displayUi() {\n        return { type: DISPLAY_UI };\n    }\n};\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_ADDRESS: {\n            return {\n                ...state,\n                address: payload\n            };\n        }\n        case SHOW_MODAL: {\n            return {\n                ...state,\n                showAddressModal: true\n            };\n        }\n        case HIDE_MODAL: {\n            return {\n                ...state,\n                showAddressModal: false\n            };\n        }\n        case DISPLAY_UI: {\n            return {\n                ...state,\n                displayUi: true\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const FISH_LAYER = \"FISH_LAYER\";\nconst DRINKING_LAYER = \"DRINKING_LAYER\";\nconst SWIMMING_LAYER = \"SWIMMING_LAYER\";\nexport const Layers = { fish: FISH_LAYER, drinking: DRINKING_LAYER, swimming: SWIMMING_LAYER }\n\nconst initialState = {\n    selectedLayer: DRINKING_LAYER\n};\n\nexport const selectors = {\n    getSelectedLayer: state => state.layer.selectedLayer\n}\n\nexport const actions = {\n    selectLayer(layer) {\n        return { type: layer }\n    }\n};\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case FISH_LAYER: {\n            return setLayer(state, FISH_LAYER);\n        }\n        case DRINKING_LAYER: {\n            return setLayer(state, DRINKING_LAYER);\n        }\n        case SWIMMING_LAYER: {\n            return setLayer(state, SWIMMING_LAYER);\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction setLayer(state, layer) {\n    return {\n        ...state,\n        selectedLayer: layer\n    }\n}","export const ECOLI_URL = \"https://www.waterqualitydata.us/data/Result/search?\";\nexport const FIBI_URL =\n    \"https://programs.iowadnr.gov/bionet/api/v1/sites/by_huc8/\";\nexport const FIBI_BY_SITE_URL =\n    \"https://programs.iowadnr.gov/bionet/api/v1/fish/fibi/by_site/\";\nexport const EPA_URL = \"https://www.waterqualitydata.us/data/Station/search?\";\nexport const SAMPLE_RESULTS_URL =\n    \"https://www.waterqualitydata.us/data/Result/search?\";\nexport const ERROR_SHE_GET_WET = \"She get wet\";\nexport const ERROR_ADDRESS_NOT_FOUND = \"Address not found\";\nexport const ERROR_WATERSHED_NOT_FOUND = \"Watershed not found\";\nexport const HUC_FROM_ADDRESS_URL =\n    \"https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates\";\nexport const WATERSHED_DATA_URL =\n    \"https://inlandwaters.geoplatform.gov/arcgis/rest/services/NHDPlus/WatershedBoundaryDataset/MapServer/10/query\";\nexport const HUC_BORDER_URL =\n    \"https://watersgeo.epa.gov/arcgis/rest/services/NHDPlus_NP21/WBD_NP21_Simplified/MapServer/find?searchText=\";\n","import axios from \"axios\";\nimport { HUC_FROM_ADDRESS_URL, WATERSHED_DATA_URL, ERROR_ADDRESS_NOT_FOUND, ERROR_WATERSHED_NOT_FOUND } from \"./constants/urls\";\n\nasync function getHucFromAddress(address) {\n    var url = HUC_FROM_ADDRESS_URL;\n    return axios\n        .get(url, {\n            params: {\n                outFields: \"Loc_name,City,Place_addr,Region,RegionAbbr,Country\",\n                outSR: { latestWkid: 3857, wkid: 102100 },\n                f: \"json\",\n                SingleLine: address\n            }\n        })\n        .then(response => {\n            if (typeof response.data.candidates[0] === \"undefined\") {\n                return Promise.reject(ERROR_ADDRESS_NOT_FOUND);\n            }\n            var firstCandidate = response.data.candidates[0];\n            return {\n                spatialReference: response.data.spatialReference,\n                x: firstCandidate.location.x,\n                y: firstCandidate.location.y\n            };\n        })\n        .then(location => {\n            return getWatershedData(location);\n        });\n}\n\nasync function getWatershedData(location) {\n    var url = WATERSHED_DATA_URL;\n\n    return axios\n        .get(url, {\n            params: {\n                f: \"json\",\n                outFields: \"HUC12\",\n                spatialRel: \"esriSpatialRelIntersects\",\n                where: \"1=1\",\n                geometryType: \"esriGeometryPoint\",\n                inSR: \"102100\",\n                outSR: \"102100\",\n                geometry: location\n            }\n        })\n        .then(response => {\n            if (typeof response.data.features[0] === \"undefined\") {\n                return Promise.reject(ERROR_WATERSHED_NOT_FOUND);\n            }\n            return response.data.features[0].attributes.HUC12;\n        });\n}\n\nexport default getHucFromAddress;\n","import axios from 'axios';\n\nasync function getHucBorder(hucid, hucType) {\n\n    let url = \"https://watersgeo.epa.gov/arcgis/rest/services/NHDPlus_NP21/WBD_NP21_Simplified/MapServer/find?searchText=\" +\n        hucid + \"&contains=true&searchFields=&sr=&layers=\" +\n        hucType + \"&layerDefs=&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&dynamicLayers=&returnZ\" +\n        \"=false&returnM=false&gdbVersion=&returnUnformattedValues=false&returnFieldName=false&datumTransformations\" +\n        \"=&layerParameterValues=&mapRangeValues=&layerRangeValues=&f=pjson\";\n\n   return axios.get(url).then((response) => {\n        return response;\n    })\n        .catch((error) => {\n            console.log(error);\n            return \"will the water kill me?\";\n        });\n}\n\nexport default getHucBorder;\n","export default class Data {\n    constructor(){\n\tthis.name = \"\";\n\tthis.unit = \"\";\n\tthis.value = 0.0;\n\tthis.date = \"\";\n\tthis.locId = \"\";\n    }\n}","export default class Point {\n    constructor(){\n\tthis.locId = \"\";\n\tthis.name = \"\";\n\tthis.lat = 0.0;\n\tthis.long = 0.0;\n\tthis.datas = [];\n    }\n}","import axios from \"axios\";\nimport {\n    FIBI_URL,\n    FIBI_BY_SITE_URL,\n    EPA_URL,\n    SAMPLE_RESULTS_URL,\n    ERROR_SHE_GET_WET\n} from \"./constants/urls\";\nimport Data from \"./models/data\";\nimport Point from \"./models/point\";\n\n// axios.defaults.timeout = 1000000000;\n\nasync function getEcoliData(huc) {\n    return baseEpaQuery(huc, \"Escherichia%20coli\");\n}\n\nasync function getNitrateData(huc) {\n    return baseEpaQuery(huc, \"Nitrate\");\n}\n\nasync function baseEpaQuery(huc, charName) {\n    let sampleResult = await getSampleResults(huc, charName);\n    let dataSamples = getValueDataFromXml(sampleResult.data);\n\n    let locationResult = await getEpaStations(huc, charName);\n    let pointSamples = getLocationDataFromXml(locationResult.data)\n    for (let point of pointSamples) {\n        let data = dataSamples.filter(d => d.locId === point.locId);\n        if (data !== undefined) {\n            point.datas = data;\n        }\n    }\n    return pointSamples;\n}\n\nfunction getValueDataFromXml(xml) {\n    let parsedResult = new DOMParser().parseFromString(xml, \"text/xml\");\n    let activities = parsedResult.getElementsByTagName(\"Activity\");\n    let samples = [];\n    for (let activity of activities) {\n\t    let sample = new Data();\n        const getTagValue = (qualifiedName) => {\n            let tag = activity.getElementsByTagName(qualifiedName)[0];\n            return (tag === undefined) ? null :tag.childNodes[0].nodeValue;\n        };\n\n        sample.name = getTagValue(\"CharacteristicName\");\n\t    sample.locId = getTagValue(\"MonitoringLocationIdentifier\");\n        sample.date = getTagValue(\"ActivityStartDate\");\n        sample.value = getTagValue(\"ResultMeasureValue\");\n\t    sample.unit = getTagValue(\"MeasureUnitCode\");\n\n        let existing = samples[sample.locId];\n        if (existing == null || (Date.parse(sample.date) > Date.parse(existing.date))) {\n            samples.push(sample);\n        }\n    }\n\n    return samples;\n}\n\nasync function convertEsriGeometryPolygonToLatLngList(promise) {\n    let esriGeometry = promise.data\n    var dataCordsQueryParam = '';\n    if (esriGeometry != null && esriGeometry.results != null && esriGeometry.results.length > 0\n        && esriGeometry.results[0].geometryType != null && esriGeometry.results[0].geometryType === (\"esriGeometryPolygon\")) {\n        esriGeometry.results[0].geometry.rings[0].forEach((lngLat) => {\n            dataCordsQueryParam += lngLat[0] + ',' + lngLat[1] + ';'\n        });\n    }\n\n    dataCordsQueryParam = dataCordsQueryParam.substring(0, dataCordsQueryParam.length - 1); // remove final semicolon\n\n    let url = `https://epsg.io/trans?data=${dataCordsQueryParam}&s_srs=3857&t_srs=4326`\n    return await axios.get(url).catch(error => {console.log(error)});\n}\n\nfunction getLocationDataFromXml(xml) {\n    let parsedResult = new DOMParser().parseFromString(xml, \"text/xml\");\n    let locations = parsedResult.getElementsByTagName(\"MonitoringLocation\");\n    let samples = [];\n    for (let location of locations) {\n\t    let sample = new Point()\n        const getTagValue = (qualifiedName) => {\n            let tag = location.getElementsByTagName(qualifiedName)[0];\n            return (tag === undefined) ? null :tag.childNodes[0].nodeValue;\n        };\n\n        sample.locId = getTagValue(\"MonitoringLocationIdentifier\");\n\t    sample.name = getTagValue(\"MonitoringLocationName\");\n        sample.lat = getTagValue(\"LatitudeMeasure\");\n        sample.long = getTagValue(\"LongitudeMeasure\");\n\n        let existing = samples[sample.locId];\n        if (existing == null || (Date.parse(sample.date) > Date.parse(existing.date))) {\n            samples.push(sample);\n        }\n    }\n\n    return samples;\n}\n\nasync function getFibiData(huc) {\n    var isHuc12 = huc.length === 12;\n    var huc8 = huc.substring(0, 8);\n    var url = FIBI_URL;\n\n    return axios\n        .get(url + huc8)\n        .then(response => {\n            return response.data;\n        })\n        .then(sites => {\n            if (isHuc12) {\n                var filteredSites = sites.filter(site => site.huc12 === huc);\n                return Promise.resolve(filteredSites);\n            }\n            return Promise.resolve(sites);\n        })\n        .then(sites => {\n            return sites.map(site => site.id);\n        })\n        .then(siteIds => {\n            return Promise.all(siteIds.map(fetchFibiDataBySiteId));\n        })\n        .catch(function(error) {\n            // handle error\n            console.log(error);\n            return ERROR_SHE_GET_WET;\n        });\n}\n\nasync function fetchFibiDataBySiteId(siteId) {\n    var url = FIBI_BY_SITE_URL;\n    return axios.get(url + siteId).then(response => {\n        return response.data;\n    }).then(results => {\n        // sort\n        return results.sort((a, b) => {\n            return new Date(b.sampleDate) - new Date(a.sampleDate);\n        });\n    }).then(results => {\n        // most recent\n        return results[0];\n    }).then(result => {\n        var fibiSite = new Point();\n        fibiSite.name = result.site.name + \" - \" + result.site.landmark;\n        fibiSite.lat = result.site.LatDD;\n        fibiSite.long = result.site.LongDD;\n\n        var fibiData = new Data();\n        fibiData.name = \"FIBI\";\n        fibiData.unit = \"rating\";\n        fibiData.value = result.FIBI;\n        fibiData.type = result.FIBIType;\n        fibiData.class = result.FIBIClass;\n        fibiData.date = result.sampleDate;\n\n        fibiSite.datas.push(fibiData);\n        return fibiSite;\n    }).catch(error => {\n        console.log(error);\n    });\n}\n\nasync function getEpaStations(huc, characteristicName) {\n    let query = EPA_URL + `startDate=${dateTwoMonthsAgo()}&huc=${huc}&mimeType=xml&characteristicName=${characteristicName}`;\n    return axios\n        .get(query)\n        .then(function(response) {\n            // handle success\n            return response;\n        })\n        .catch(function(error) {\n            // handle error\n            return ERROR_SHE_GET_WET;\n        });\n}\n\nasync function getSampleResults(huc, characteristicName) {\n    var url = SAMPLE_RESULTS_URL + `startDate=${dateTwoMonthsAgo()}&huc=${huc}&mimeType=xml&characteristicName=${characteristicName}`;\n\n    return axios.get(url).then().catch(error => {\n        console.log(error);\n    });\n}\n\nfunction dateTwoMonthsAgo() {\n    let startDate = new Date();\n    startDate.setMonth(startDate.getMonth() - 2);\n    return startDate.toLocaleDateString().replace(/\\//g, '-')\n}\n\nasync function getHuc(lat, long) {}\n\nexport default {\n    getEcoliData,\n    getNitrateData,\n    getFibiData,\n    getEpaStations,\n    getSampleResults,\n    getHuc,\n    convertEsriGeometryPolygonToLatLngList\n};\n","const LOADING = 'LOADING';\nconst LOADED = 'LOADED';\n\nconst initialState = {\n    isLoading: false\n};\n\nconst isLoading = () => ({\n    type: LOADING\n});\n\nconst loaded = () => ({\n    type: LOADED\n});\n\nexport const actions = {\n    isLoading,\n    loaded\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case LOADING:\n            return {...state, isLoading: true};\n        case LOADED:\n            return {...state, isLoading: false};\n        default:\n            return state;\n    }\n}","import API from \"../../server-core/api-client\";\nimport {actions as appStateActions} from './appState';\n\nconst GET_NITRATE_POINTS = \"GET_NITRATE_POINTS\";\nconst GET_ECOLI_POINTS = \"GET_ECOLI_POINTS\";\nconst GET_FIBI_POINTS = \"GET_FIBI_POINTS\";\n\nfunction fetchDataPoints(hucId) {\n    return async dispatch => {\n        try {\n            await Promise.all([\n                getNitratePoints(hucId, dispatch),\n                getEcoliPoints(hucId, dispatch),\n                getFibiPoints(hucId, dispatch)\n            ]);\n            dispatch(appStateActions.loaded());\n        } catch (e) {\n            console.log(\"Get Data Points Error: \", e);\n            dispatch({ type: \"SHOW_MODAL\" });\n        }\n    }\n}\n\nasync function getNitratePoints(hucId, dispatch) {\n    const nitrate = await API.getNitrateData(hucId);\n    dispatch({type: GET_NITRATE_POINTS, payload: nitrate});\n}\n\nasync function getEcoliPoints(hucId, dispatch) {\n    const ecoli = await API.getEcoliData(hucId);\n    dispatch({ type: GET_ECOLI_POINTS, payload: ecoli });\n}\n\nasync function getFibiPoints(hucId, dispatch) {\n    const fibi = await API.getFibiData(hucId);\n    dispatch({ type: GET_FIBI_POINTS, payload: fibi });\n}\n\nexport const actions = {\n    fetchDataPoints\n};\n\nexport function reducer(state = {}, { type, payload }) {\n    switch (type) {\n        case GET_NITRATE_POINTS: {\n            return {\n                ...state,\n                nitratePoints: payload\n            };\n        }\n        case GET_ECOLI_POINTS: {\n            return {\n                ...state,\n                ecoliPoints: payload\n            };\n        }\n        case GET_FIBI_POINTS: {\n            return {\n                ...state,\n                fibiPoints: payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n\n","import getHucFromAddress from \"../../server-core/location-service\";\nimport getHucBorder from \"../../server-core/border-data-api\";\nimport API from \"../../server-core/api-client\";\nimport { actions as dataPointsActions } from \"./data-points\";\nimport {get} from 'lodash';\nimport {actions as appStateActions} from './appState';\n\nconst FETCHING_HUC = \"FETCHING_HUC\";\nconst GET_HUC = \"HUC_RECEIVED\";\nconst GET_HUC_BORDER = \"HUC_BORDER_RECEIVED\";\nconst CONVERT_HUC = \"HUC_CONVERTED\";\nconst HUC_LOADED = \"HUC_LOADED\";\n\nconst initialState = {\n    hucId: '',\n    hucBorder: {},\n    latLongs: [],\n    coords: [],\n    isLoading: false\n};\n\nexport const selectors = {\n    getHucName: state => get(state, 'huc.hucBorder.data.results[0].attributes.HU_10_NAME'),\n    isLoading: state => get(state, 'huc.isLoading', false)\n};\n\nfunction fetchHucs(address) {\n    return async dispatch => {\n        try {\n            dispatch(appStateActions.isLoading());\n            dispatch({type: FETCHING_HUC});\n            const hucId = await getHucFromAddress(address);\n            dispatch({type: GET_HUC, payload: hucId});\n            dispatch(dataPointsActions.fetchDataPoints(hucId));\n\n            const border = await getHucBorder(hucId, \"huc_12\");\n            dispatch({type: GET_HUC_BORDER, payload: border});\n\n            const result = await API.convertEsriGeometryPolygonToLatLngList(border);\n            const latLongs = result.data;\n            const coords = convertLatLongToCoords(latLongs);\n            dispatch({type: CONVERT_HUC, payload: {latLongs, coords}});\n\n            dispatch({type: HUC_LOADED});\n        } catch (e) {\n            console.log(\"Get Huc Info Error: \", e);\n            dispatch({ type: \"SHOW_MODAL\" });\n        }\n    }\n}\n\nexport const actions = {\n    fetchHucs\n};\n\nexport function reducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case FETCHING_HUC: {\n            return {\n                ...state,\n                isLoading: true\n            }\n        }\n        case GET_HUC: {\n            return {\n                ...state,\n                hucId: payload\n            };\n        }\n        case GET_HUC_BORDER: {\n            return {\n                ...state,\n                hucBorder: payload\n            };\n        }\n        case CONVERT_HUC: {\n            return {\n                ...state,\n                latLongs: payload.latLongs,\n                coords: payload.coords\n            };\n        }\n        case HUC_LOADED: {\n            return {\n                ...state,\n                isLoading: false\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport function convertLatLongToCoords(latLongs) {\n    let coords = [];\n    for (let i = 0; i < latLongs.length; i++) {\n        coords.push({\n            lat: Number(latLongs[i].y),\n            lng: Number(latLongs[i].x)\n        });\n    }\n    return coords;\n}\n","import { combineReducers } from \"redux\";\nimport * as address from \"./address\";\nimport * as layer from \"./layer\";\nimport * as huc from \"./huc\";\nimport * as dataPoints from \"./data-points\";\nimport * as appState from './appState';\n\nexport default combineReducers({\n    address: address.reducer,\n    layer: layer.reducer,\n    huc: huc.reducer,\n    dataPoints: dataPoints.reducer,\n    appState: appState.reducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    drawerIcon: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: theme.spacing.unit * 5,\n        width: theme.spacing.unit * 3,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 5,\n        },\n        marginRight: 0\n    },\n    active: {\n        color: theme.palette.primary[500]\n    }\n});\n\nfunction ListItemWithIcon({text, icon, classes, onClick, isActive}) {\n    return (<ListItem button key={text} onClick={onClick}>\n        <ListItemIcon className={classes.drawerIcon}>\n            <FontAwesomeIcon icon={icon} className={isActive ? classes.active : undefined} style={{width: '2em', height: '2em'}}/>\n        </ListItemIcon>\n        <ListItemText primary={text}/>\n    </ListItem>);\n}\n\nexport default withStyles(styles)(ListItemWithIcon);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport classNames from 'classnames';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faChevronLeft, faFish, faGlassWhiskey, faSwimmer} from '@fortawesome/free-solid-svg-icons';\nimport ListItemWithIcon from './list-item-with-icon';\nimport {connect} from 'react-redux';\nimport { actions, Layers, selectors } from \"../dux/layer\";\n\nfunction AppDrawer({handleDrawerClose, classes, open, selectLayer, selectedLayer}) {\n    return (<Drawer\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n        })}\n        classes={{\n            paper: classNames({\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            }),\n        }}\n        open={open}\n    >\n        <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n            </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItemWithIcon text='Drinking' isActive={selectedLayer === Layers.drinking} icon={faGlassWhiskey} onClick={() => selectLayer(Layers.drinking)}/>\n            <ListItemWithIcon text='Fishing' isActive={selectedLayer === Layers.fish} icon={faFish} onClick={() => selectLayer(Layers.fish)}/>\n            <ListItemWithIcon text='Swimming' isActive={selectedLayer === Layers.swimming} icon={faSwimmer} onClick={() => selectLayer(Layers.swimming)}/>\n        </List>\n    </Drawer>);\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: selectors.getSelectedLayer(state)\n    };\n}\n\nconst StyledAppDrawer = withStyles(styles)(AppDrawer);\n\nexport default connect(\n    mapStateToProps,\n    actions\n)(StyledAppDrawer)\n\nfunction styles(theme){\n    return {\n        drawer: {\n            width: theme.spacing.unit * 7,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: theme.spacing.unit * 30,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing.unit * 7 + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing.unit * 9 + 1,\n            },\n        },\n        toolbar: {\n            height: theme.spacing.unit * 7,\n            [theme.breakpoints.up('sm')]: {\n                height: theme.spacing.unit * 8,\n            },\n            display: 'flex',\n            justifyContent: 'center'\n        }\n    };\n}","import React from 'react';\nimport classNames from 'classnames';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faBars} from '@fortawesome/free-solid-svg-icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {connect} from 'react-redux';\n\nconst drawerWidth = 240;\n\nconst styles =  theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: theme.spacing.unit,\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit * 1.5,\n        },\n        marginRight: theme.spacing.unit * 2\n    },\n    hide: {\n        display: 'none',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\nfunction Navbar(props) {\n    const {classes} = props;\n    return <AppBar\n        position=\"fixed\"\n        className={classNames(classes.appBar, {\n            [classes.appBarShift]: props.open,\n        })}\n    >\n        <Toolbar disableGutters={!props.open}>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={props.onClick}\n                className={classNames(classes.menuButton, {\n                    [classes.hide]: props.open,\n                })}\n            >\n                <FontAwesomeIcon icon={faBars}/>\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                {props.title}\n            </Typography>\n        </Toolbar>\n        {props.isLoading && <LinearProgress/>}\n    </AppBar>;\n}\n\nconst mapStateToProps = state => ({\n    isLoading: state.appState.isLoading\n});\n\nconst StyledComponent = withStyles(styles)(Navbar);\n\nexport default connect(mapStateToProps)(StyledComponent);","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport AppDrawer from './app-drawer';\nimport Navbar from './navbar'\n\nconst styles = {\n    root: {\n        display: 'flex',\n    },\n};\n\nconst Header = ({title, classes, children}) => {\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Navbar open={open} onClick={handleDrawerOpen} title={title}/>\n            <AppDrawer open={open} handleDrawerClose={handleDrawerClose}/>\n            {children}\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(Header);\n","export const FISH_LAYER = \"FISH_LAYER\";\nexport const SWIMMING_LAYER = \"SWIMMING_LAYER\";\nexport const DRINKING_LAYER = \"DRINKING_LAYER\";","import {\n    DRINKING_LAYER,\n    FISH_LAYER,\n    SWIMMING_LAYER\n} from \"../../constants_shared/layers\";\n\nconst FibiScores = {\n    Good: 51,\n    Lackin: 31,\n    VeryLow: 0\n};\n\nconst EcoliScores = {\n    Low: 126,\n    Medium: 234,\n    High: 235\n};\n\nconst NitrateScores = {\n    Safe: 5,\n    Polluted: 10,\n    Extreme: 11\n};\n\nconst highImage = \"/images/high.png\";\nconst medImage = \"/images/med.png\";\nconst lowImage = \"/images/low.png\";\n\nexport default function determineMarkerIcon(score, layer) {\n    switch (layer) {\n        case DRINKING_LAYER: {\n            if (score <= NitrateScores.Safe) return lowImage;\n            if (score <= NitrateScores.Polluted) return medImage;\n            return highImage;\n        }\n        case SWIMMING_LAYER: {\n            if (score <= EcoliScores.Low) return lowImage;\n            if (score <= EcoliScores.Medium) return medImage;\n            return highImage;\n        }\n        case FISH_LAYER: {\n            if (score >= FibiScores.Good) return lowImage;\n            if (score >= FibiScores.Lackin) return medImage;\n            return highImage;\n        }\n        default: {\n            throw new Error(\"Layer not set when creating markers!\");\n        }\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Map, Marker, Polygon } from \"google-maps-react\";\nimport {\n    SWIMMING_LAYER,\n    DRINKING_LAYER,\n    FISH_LAYER\n} from \"../../constants_shared/layers\";\nimport determineMarkerIcon from \"./marker-score\";\n\nimport \"./map.scss\";\n\nfunction mapStateToProps(state) {\n    return {\n        nitratePoints: state.dataPoints.nitratePoints,\n        ecoliPoints: state.dataPoints.ecoliPoints,\n        fibiPoints: state.dataPoints.fibiPoints,\n        coordinatesList: state.huc.coords,\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst PlottedMap = props => {\n    let markers = [];\n    let shouldCreateMarkers = true;\n\n    let dataPoints = [];\n\n    function setDataPoints() {\n        switch (props.selectedLayer) {\n            case SWIMMING_LAYER: {\n                return props.ecoliPoints;\n            }\n            case DRINKING_LAYER: {\n                return props.nitratePoints;\n            }\n            case FISH_LAYER: {\n                return props.fibiPoints;\n            }\n            default: {\n                return [];\n            }\n        }\n    }\n\n    function createMarkers() {\n        dataPoints = setDataPoints();\n        if (dataPoints !== undefined && dataPoints !== []) {\n            markers = [];\n            for (var dataPoint of dataPoints) {\n                markers.push(createMarker(dataPoint));\n            }\n            if (markers.length > 0) {\n            }\n        }\n    }\n\n    function createMarker(point) {\n        const recentScore = determineMostRecentDate(point.datas);\n        let url = determineMarkerIcon(recentScore.value, props.selectedLayer);\n        return (\n            <Marker\n                key={point.locId}\n                position={{ lat: point.lat, lng: point.long }}\n                icon={{\n                    url: url,\n                    anchor: new window.google.maps.Point(16, 32),\n                    scaledSize: new window.google.maps.Size(32, 32)\n                }}\n            />\n        );\n    }\n\n    function renderMarkers() {\n        if (shouldCreateMarkers) {\n            createMarkers();\n        }\n\n        if (markers.length > 0) {\n            return markers;\n        }\n    }\n\n    function determineMostRecentDate(datas) {\n        let newest = {date : \"\"};\n        for(let data of datas) {\n            if(data.date > newest.date) {\n                newest = data;\n            }\n        }\n        return newest;\n    }\n\n    return (\n        <Map\n            className=\"map\"\n            disableDefaultUI={true}\n            google={props.google}\n            zoom={13}\n            initialCenter={{ lat: 41.583586, lng: -93.628419 }}\n        >\n            <Polygon\n                paths={props.coordinatesList}\n                strokeColor=\"#0000FF\"\n                strokeOpacity={0.8}\n                strokeWeight={2}\n                fillColor=\"#0000FF\"\n                fillOpacity={0.35}\n            />\n\n            {renderMarkers()}\n        </Map>\n    );\n};\n\nexport default connect(mapStateToProps)(PlottedMap);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./legend-row.css\";\n\nconst LegendRow = props => {\n    const { ranking, score, icon } = props;\n    return (\n        <div className=\"row\">\n            <Typography className=\"text\">{ranking}</Typography>\n            <Typography className=\"text\">{score}</Typography>\n            <img className=\"icon\" src={icon} alt=\"scoreIconImage\"/>\n        </div>\n    );\n};\n\nLegendRow.propTypes = {\n    ranking: PropTypes.string.isRequired,\n    score: PropTypes.string.isRequired\n};\n\nexport default LegendRow;\n","import React from \"react\";\nimport {connect} from 'react-redux';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport LegendRow from \"./legend-row\";\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    SWIM_LEGEND_HIGH,\n    SWIM_LEGEND_HIGH_SCORE,\n    SWIM_LEGEND_MEDIUM,\n    SWIM_LEGEND_MEDIUM_SCORE,\n    SWIM_LEGEND_LOW,\n    SWIM_LEGEND_LOW_SCORE,\n    SWIM_LEGEND_TITLE,\n    FISH_LEGEND_TITLE,\n    DRINKING_LEGEND_TITLE,\n    DRINKING_LEGEND_SAFE,\n    DRINKING_LEGEND_SAFE_SCORE,\n    DRINKING_LEGEND_POLLUTED,\n    DRINKING_LEGEND_POLLUTED_SCORE,\n    DRINKING_LEGEND_EXTREME,\n    DRINKING_LEGEND_EXTREME_SCORE\n} from \"../../constants/legend\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    }\n}\n\nconst ScoreLegend = props => {\n    const ranks = SetLegend(props.selectedLayer);\n    return (\n        <Card className=\"legend\">\n            <CardHeader className=\"title\" title={ranks.Title} />\n            <CardContent>\n                <LegendRow\n                    ranking={ranks.High.Ranking}\n                    score={ranks.High.Score}\n                    icon={ranks.High.icon}\n                />\n                <LegendRow\n                    ranking={ranks.Med.Ranking}\n                    score={ranks.Med.Score}\n                    icon={ranks.Med.icon}\n                />\n                <LegendRow\n                    ranking={ranks.Low.Ranking}\n                    score={ranks.Low.Score}\n                    icon={ranks.Low.icon}\n                />\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetLegend = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return {\n                Title: SWIM_LEGEND_TITLE,\n                High: {\n                    Ranking: SWIM_LEGEND_HIGH,\n                    Score: SWIM_LEGEND_HIGH_SCORE,\n                    icon: \"/images/high.png\"\n                },\n                Med: {\n                    Ranking: SWIM_LEGEND_MEDIUM,\n                    Score: SWIM_LEGEND_MEDIUM_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: SWIM_LEGEND_LOW,\n                    Score: SWIM_LEGEND_LOW_SCORE,\n                    icon: \"/images/low.png\"\n                }\n            };\n        case FISH_LAYER:\n            return {\n                Title: FISH_LEGEND_TITLE,\n                High: {\n                    Ranking: SWIM_LEGEND_HIGH,\n                    Score: SWIM_LEGEND_HIGH_SCORE,\n                    icon: \"/images/low.png\"\n                },\n                Med: {\n                    Ranking: SWIM_LEGEND_MEDIUM,\n                    Score: SWIM_LEGEND_MEDIUM_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: SWIM_LEGEND_LOW,\n                    Score: SWIM_LEGEND_LOW_SCORE,\n                    icon: \"/images/high.png\"\n                }\n            };\n        default: {\n            return {\n                Title: DRINKING_LEGEND_TITLE,\n                High: {\n                    Ranking: DRINKING_LEGEND_SAFE,\n                    Score: DRINKING_LEGEND_SAFE_SCORE,\n                    icon: \"/images/low.png\"\n                },\n                Med: {\n                    Ranking: DRINKING_LEGEND_POLLUTED,\n                    Score: DRINKING_LEGEND_POLLUTED_SCORE,\n                    icon: \"/images/med.png\"\n                },\n                Low: {\n                    Ranking: DRINKING_LEGEND_EXTREME,\n                    Score: DRINKING_LEGEND_EXTREME_SCORE,\n                    icon: \"/images/high.png\"\n                }\n            };\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(ScoreLegend);\n","export const FISH_LEGEND_TITLE = \"Diversity\";\nexport const FISH_LEGEND_GOOD = \"Good,\";\nexport const FISH_LEGEND_GOOD_SCORE = \"51 - 70\";\n\nexport const FISH_LEGEND_LACKING = \"Lacking,\";\nexport const FISH_LEGEND_LACKING_SCORE = \"31 - 50\";\n\nexport const FISH_LEGEND_VERYLOW = \"Very Low,\";\nexport const FISH_LEGEND_VERYLOW_SCORE = \"0 - 30\";\n\nexport const SWIM_LEGEND_TITLE = \"Risk Per 100 mL:\";\nexport const SWIM_LEGEND_LOW = \"Low,\";\nexport const SWIM_LEGEND_LOW_SCORE = \"Under 126\";\n\nexport const SWIM_LEGEND_MEDIUM = \"Medium,\";\nexport const SWIM_LEGEND_MEDIUM_SCORE = \"Over 126\";\n\nexport const SWIM_LEGEND_HIGH = \"High,\";\nexport const SWIM_LEGEND_HIGH_SCORE = \"Over 235\";\n\nexport const DRINKING_LEGEND_TITLE = \"Pollution mg/L:\";\nexport const DRINKING_LEGEND_SAFE = \"Safe,\";\nexport const DRINKING_LEGEND_SAFE_SCORE = \"0-5\";\n\nexport const DRINKING_LEGEND_POLLUTED = \"Polluted,\";\nexport const DRINKING_LEGEND_POLLUTED_SCORE = \"6-10\";\n\nexport const DRINKING_LEGEND_EXTREME = \"Extreme,\";\nexport const DRINKING_LEGEND_EXTREME_SCORE = \"Over 10\";\n","const Nitrate_Section1Title = \"Levels: \";\nconst Nitrate_Section1Description =\n    \"Nitrate levels reflect risks to human health from long-term ingestion of tap water\";\n\nconst Nitrate_Section2Title = \"Standard: \";\nconst Nitrate_Section2Description =\n    \"The EPA sets national drinking water standards.\";\nconst Nitrate_Section2EPALearnMoreLink = \"\";\nconst Nitrate_Section2DescriptionPart2 =\n    \"University of Iowa researched health risks for women.\";\nconst Nitrate_Section2UoILearnMoreLink = \"\";\n\nconst Nitrate_Section3Title = \"Users: \";\nconst Nitrate_Section3Description = \"Municipal water works and wells\";\n\nconst Ecoli_Section1Title = \"Levels: \";\nconst Ecoli_Section1Description =\n    \"E. Coli levels reflect risks to human health from skin exposure and limited ingestion.\";\n\nconst Ecoli_Section2Title = \"Standard: \";\nconst Ecoli_Section2Description =\n    \"The Iowa DNR tests E. Coli levels. Five consecutive samples over 126 per mL or one sample over 235 consitute an advisory.\";\nconst Ecoli_Section2LearnMoreLink = \"\";\n\nconst Ecoli_Section3Title = \"Users: \";\nconst Ecoli_Section3Description = \"Swimmins, canoers, and kayakers\";\n\nconst Fibi_Section1Title = \"Diversity: \";\nconst Fibi_Section1Description =\n    \"FIBI scores reflect aquatic diversity which supports other area wildlife populations.\";\n\nconst Fibi_Section2Title = \"Standard: \";\nconst Fibi_Section2Description =\n    \"The Iowa DNR calculates FIBI and BMIBI scores for different eco-regions roughly every three years.\";\nconst Fibi_Section2LearnMoreLink = \"\";\n\nconst Fibi_Section3Title = \"Users: \";\nconst Fibi_Section3Description = \"Anglers, hunters, and birders.\";\n\nexport const NitrateSection = {\n    section1: {\n        title: Nitrate_Section1Title,\n        description: Nitrate_Section1Description\n    },\n    section2: {\n        title: Nitrate_Section2Title,\n        description: Nitrate_Section2Description,\n        learnMoreLinks: [Nitrate_Section2EPALearnMoreLink, Nitrate_Section2UoILearnMoreLink],\n        descriptionPart2: Nitrate_Section2DescriptionPart2\n    },\n    section3: {\n        title: Nitrate_Section3Title,\n        description: Nitrate_Section3Description\n    }\n};\n\nexport const EcoliSection = {\n    section1: {\n        title: Ecoli_Section1Title,\n        description: Ecoli_Section1Description\n    },\n    section2: {\n        title: Ecoli_Section2Title,\n        description: Ecoli_Section2Description,\n        learnMoreLinks: [Ecoli_Section2LearnMoreLink]\n    },\n    section3: {\n        title: Ecoli_Section3Title,\n        description: Ecoli_Section3Description\n    }\n};\n\nexport const FibiSection = {\n    section1: {\n        title: Fibi_Section1Title,\n        description: Fibi_Section1Description\n    },\n    section2: {\n        title: Fibi_Section2Title,\n        description: Fibi_Section2Description,\n        learnMoreLinks: [Fibi_Section2LearnMoreLink]\n    },\n    section3: {\n        title: Fibi_Section3Title,\n        description: Fibi_Section3Description\n    }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    FibiSection,\n    NitrateSection,\n    EcoliSection\n} from \"../../constants/sidebar-right\";\nimport \"./sidebar-right-description.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarRightDescription = props => {\n    const descriptions = SetDescription(props.selectedLayer);\n    return (\n        <Card className=\"description-container\">\n            <CardContent>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section1.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section1.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section2.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section2.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section3.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section3.description}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetDescription = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return EcoliSection;\n        case FISH_LAYER:\n            return FibiSection;\n        case DRINKING_LAYER:\n            return NitrateSection;\n            default:\n            return NitrateSection;\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarRightDescription);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ScoreLegend from \"../legend/score-legend\";\nimport SidebarRightDescription from \"./sidebar-right-description\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./sidebar-right.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.selectedLayer\n    };\n}\n\nfunction renderDescription(show) {\n    if (show) {\n        return <SidebarRightDescription />;\n    }\n}\n\nconst SidebarRight = props => {\n    const [displayDescription, setDisplay] = useState(false);\n    return (\n        <div className=\"container-right\">\n            <ScoreLegend />\n            <Button\n                variant=\"contained\"\n                className=\"button\"\n                onClick={handleClick}\n            >\n                <FontAwesomeIcon icon={faArrowLeft} />\n            </Button>\n            {renderDescription(displayDescription)}\n        </div>\n    );\n    function handleClick() {\n        setDisplay(!displayDescription);\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarRight);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarLeftHeader = props => {\n    return (\n        <Card>\n            <CardHeader title={determineTitle(props.selectedLayer)}>\n            </CardHeader>\n        </Card>\n    );\n\n    function determineTitle(layer) {\n        switch (layer) {\n            case DRINKING_LAYER:\n                return \"Nitrates\";\n            case SWIMMING_LAYER:\n                return \"E. Coli\";\n            case FISH_LAYER:\n                return \"FIBI Scores\";\n            default:\n                return \"No layer selected\";\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeftHeader);\n","const warning =\n    \"A single data point can never give a full picture of water quality\";\n\n\nconst Nitrate_Section2Description = \"Phosphates\";\nconst Nitrate_Section2LearnMoreLink = \"\";\n\nconst Ecoli_Section1Description =\n    \"Escherichia coli(E.coli) bacteria occurs naturally in the body, so is not necessarily disease-causing. High levels are used to conservatively test the likelihood of an infectious dose for human health.\";\nconst Ecoli_Section1LearnMoreLink = \"\";\n\nconst Ecoli_Section2Description = \"Coliform bacteria.\";\nconst Ecoli_Section2LearnMoreLink = \"\";\n\nconst Fibi_Section1Description =\n    \"Fish Index of Biotic Integrity(FIBI) scores are a composite index combining twelve metrics for a community-level assessment of stream biological conditions.\";\nconst Fibi_Section1LearnMoreLink = \"\";\n\nconst Fibi_Section2Description =\n    \"Benthic Macroinvertebrate(BMIBI) scores can predict changes to FIBI scores.\";\nconst Fibi_Section2LearnMoreLink = \"\";\n\nexport const NitrateSection = {\n    warning,\n    section1: {\n        description: \"Nitrates can be a nutrient or a pollutant. Potable tap water has Max Contaminant Levels from ingestion over long periods of time. This is NOT the same as limited ingestion from recreating in bodies of water.\"\n    },\n    section2: {\n        description: Nitrate_Section2Description,\n        learnMoreLink: Nitrate_Section2LearnMoreLink\n    }\n};\nexport const EcoliSection = {\n    warning,\n    section1: {\n        description: Ecoli_Section1Description,\n        learnMoreLink: Ecoli_Section1LearnMoreLink\n    },\n    section2: {\n        description: Ecoli_Section2Description,\n        learnMoreLink: Ecoli_Section2LearnMoreLink\n    }\n};\nexport const FibiSection = {\n    warning,\n    section1: {\n        description: Fibi_Section1Description,\n        learnMoreLink: Fibi_Section1LearnMoreLink\n    },\n    section2: {\n        description: Fibi_Section2Description,\n        learnMoreLink: Fibi_Section2LearnMoreLink\n    }\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport {\n    SWIMMING_LAYER,\n    FISH_LAYER,\n    DRINKING_LAYER\n} from \"../../../constants_shared/layers\";\nimport {\n    FibiSection,\n    NitrateSection,\n    EcoliSection\n} from \"../../constants/sidebar-left\";\nimport \"./sidebar-left-description.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.layer.selectedLayer\n    };\n}\n\nconst SidebarLeftDescription = props => {\n    const descriptions = SetDescription(props.selectedLayer);\n    return (\n        <Card className=\"description-container\">\n            <CardContent>\n                <Typography>{descriptions.warning}</Typography>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section1.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section1.description}\n                    </Typography>\n                </div>\n                <div className=\"section\">\n                    <Typography className=\"title\" variant=\"h6\">\n                        {descriptions.section2.title}\n                    </Typography>\n                    <Typography className=\"description\">\n                        {descriptions.section2.description}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst SetDescription = layer => {\n    switch (layer) {\n        case SWIMMING_LAYER:\n            return EcoliSection;\n        case FISH_LAYER:\n            return FibiSection;\n        case DRINKING_LAYER:\n            return NitrateSection;\n        default:\n            return NitrateSection;\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeftDescription);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport SidebarLeftHeader from \"./sidebar-left-header\";\nimport SidebarLeftDescription from \"./sidebar-left-description\";\nimport Button from \"@material-ui/core/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./sidebar-left.css\";\n\nfunction mapStateToProps(state) {\n    return {\n        selectedLayer: state.selectedLayer\n    };\n}\n\nfunction renderDescription(show) {\n    if (show) {\n        return <SidebarLeftDescription />;\n    }\n}\n\nconst SidebarLeft = props => {\n    const [displayDescription, setDisplay] = useState(false);\n    return (\n        <div className=\"container-left\">\n            <SidebarLeftHeader />\n            <Button\n                variant=\"contained\"\n                className=\"button\"\n                onClick={handleClick}\n            >\n                <FontAwesomeIcon icon={faArrowRight} />\n            </Button>\n            {renderDescription(displayDescription)}\n        </div>\n    );\n    function handleClick() {\n        setDisplay(!displayDescription);\n    }\n};\n\nexport default connect(mapStateToProps)(SidebarLeft);\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from \"@material-ui/core/Button\";\nimport {\n    ADDRESS_MODAL_INPUT_PLACEHOLDER\n} from \"../constants/address\";\nimport \"./address.css\";\n\nimport { actions } from \"../dux/address\";\nimport { actions as hucActions } from \"../dux/huc\";\nimport { connect } from \"react-redux\";\n\nfunction mapStateToProps(state) {\n    return {\n        address: state.address.address,\n        showAddressModal: state.address.showAddressModal\n    };\n}\n\nconst mapDispatchToProps = {\n    ...actions,\n    ...hucActions\n};\n\nconst AddressModal = props => {\n    return (\n        <Dialog open={props.showAddressModal} onClose={handleSubmit}>\n            <DialogTitle id=\"form-dialog-title\">Address</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Please enter the address of where you would like to check the water quality\n                </DialogContentText>\n                <TextField\n                    className=\"address\"\n                    type=\"text\"\n                    onChange={handleOnChange}\n                    placeholder={ADDRESS_MODAL_INPUT_PLACEHOLDER}\n                    fullWidth\n                    margin=\"dense\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={handleSubmit}\n                >\n                    Search\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n    function handleSubmit() {\n        props.fetchHucs(props.address);\n        props.hideModal();\n        props.displayUi();\n    }\n\n    function handleOnChange(e) {\n        props.addAddress(e.target.value);\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddressModal);\n","export const ADDRESS_MODAL_INPUT_PLACEHOLDER = 'Enter Address Here...';","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./header\";\nimport PlottedMap from \"./map\";\nimport SidebarRight from \"./sidebar-right/sidebar-right\";\nimport SidebarLeft from \"./sidebar-left/sidebar-left\";\nimport AddressModal from \"../modals/address\";\nimport { HEADER_TITLE } from \"../constants/header\";\nimport {selectors} from '../dux/huc';\n\nfunction mapStateToProps(state) {\n    return {\n        displayUi: state.address.displayUi,\n        hucName: selectors.getHucName(state)\n    };\n}\n\nconst Main = props => {\n    return (\n        <div className=\"main\">\n            <Header title={props.hucName || HEADER_TITLE}>\n                <PlottedMap google={props.google} />\n                <AddressModal />\n            </Header>\n        </div>\n    );\n\n    function renderUi() {\n        if (props.displayUi) {\n            return (\n                <div>\n                    <SidebarRight displayDescription={false} />\n                    <SidebarLeft displayDescription={false}/>\n                </div>\n            );\n        }\n    }\n};\n\nexport default connect(mapStateToProps)(Main);\n","export const HEADER_TITLE = \"Find Water Quality Data Near Me\";","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nconst AppTheme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: {\n            main: \"#84ffff\"\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nexport default AppTheme;","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./ui-core/dux/store\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Main from \"./ui-core/components/main\";\n\nimport AppTheme from \"./theme\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <MuiThemeProvider theme={AppTheme}>\n                    <div className=\"App\">\n                        <Main {...this.props} />\n                    </div>\n                </MuiThemeProvider>\n            </Provider>\n        );\n    }\n}\n\nconst loadAPIKey = () => {\n    if (process.env.NODE_ENV === \"development\") {\n        return process.env.REACT_APP_DEV_GOOGLE_MAPS;\n    }\n    return process.env.REACT_APP_PROD_GOOGLE_MAPS;\n};\n\nexport default GoogleApiWrapper({\n    apiKey: loadAPIKey()\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './ui-core/styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}